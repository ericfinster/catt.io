#
#  eh.catt - Eckmann-Hilton
#

coh id C (x) : x => x

coh comp C (x(f)y(g)z) : x => z

coh vert C (x(f(a)g(b)h)y) : f => h

coh whisk_r C (x(f(a)g)y(h)z) : comp f h => comp g h

coh whisk_l C (x(f)y(g(a)h)z) : comp f g => comp f h

coh swap3 C (x(f(a)g)y(h(b)k)z)
  : vert (whisk_r a h) (whisk_l g b) =>
    vert (whisk_l f b) (whisk_r a k)

let eh {C : Cat}
  {x :: C}
  (a :: id x => id x)
  (b :: id x => id x)
  : [ vert a b => vert b a ]
  = swap3 a b
