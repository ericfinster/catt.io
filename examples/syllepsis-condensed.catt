coh id C (x) : x => x # def0

coh id1 C (x(f)y) : f => f # def1

coh swap2 C (x(f(a)g)y(h(b)k)z) :
  ucomp [ 2 1 2 ] (ucomp [ 2 0 1 ] a h)
  	   	  (ucomp [ 1 0 2 ] g b)
  =>
  ucomp [ 2 1 2 ] (ucomp [ 1 0 2 ] f b)
  	      	  (ucomp [ 2 0 1 ] a k) # def3

coh swap3 C (u(x(f(a)g)y(h(b)k)z)v) :
  ucomp [ 3 2 3 ] (ucomp [ 2 1 3 ] f b)
  	      	  (ucomp [ 3 1 2 ] a k)
  =>
  ucomp [ 3 2 3 ] (ucomp [ 3 1 2 ] a h)
  	      	  (ucomp [ 2 1 3 ] g b) # def2

coh swap3inv C (u(x(f(a)g)y(h(b)k)z)v) :
  ucomp [ 3 2 3 ] (ucomp [ 3 1 2 ] a h)
  	      	  (ucomp [ 2 1 3 ] g b)
  =>
  ucomp [ 3 2 3 ] (ucomp [ 2 1 3 ] f b)
  	      	  (ucomp [ 3 1 2 ] a k) # def6

coh swap2natleft C (u(x(f(a)g)y)v(s(h)t)w) :
  ucomp [ 3 2 3 ] (ucomp [ 3 1 2 ] (ucomp [ 3 0 1 ] a s)
  	      	  	       	   (ucomp [ 1 0 2 ] y h))
  	      	  (swap2 g h)
  =>
  ucomp [ 3 2 3 ] (swap2 f h)
  	      	  (ucomp [ 2 1 3 ] (ucomp [ 1 0 2 ] x h)
		  	       	   (ucomp [ 3 0 1 ] a t)) # def4

coh swap2natright C (u(x(g)y)v(s(h(b)k)t)w) :
  ucomp [ 3 2 3 ] (ucomp [ 2 1 3 ] (ucomp [ 2 0 1 ] g s)
  	      	  	       	   (ucomp [ 1 0 3 ] y b))
		  (swap2 g k)
  =>
  ucomp [ 3 2 3 ] (swap2 g h)
  	      	  (ucomp [ 3 1 2 ] (ucomp [ 1 0 3 ] x b)
		  	       	   (ucomp [ 2 0 1 ] g t)) # def5

coh sylcoh C (u(x(f(a)g)y)v(s(h(b)k)t)w) :
  ucomp [ 4 3 4 3 4 ] (ucomp [ 4 2 3 ] (swap3inv (ucomp [ 3 0 1 ] a s)
  	      	      	       	       		 (ucomp [ 1 0 3 ] y b))
  	      	      	       	       (swap2 g k))
              	      (ucomp [ 3 2 4 ] (ucomp [ 2 1 3 ] (ucomp [ 2 0 1 ] f s)
		      	       		      	      	(ucomp [ 1 0 3 ] y b))
		      	       	       (swap2natleft a k))
        	      (ucomp [ 4 2 3 ] (swap2natright f b)
		      	       	       (ucomp [ 2 1 3 ] (ucomp [ 1 0 2 ] x k)
				       	      	      	(ucomp [ 3 0 1 ] a t)))
  =>
  ucomp [ 4 3 4 3 4 ] (ucomp [ 3 2 4 ] (ucomp [ 3 1 2 ] (ucomp [ 3 0 1 ] a s)
  	      	      	       	       	      	      	(ucomp [ 1 0 2 ] y h))
  	      	      	       	       (swap2natright g b))
  	              (ucomp [ 4 2 3 ] (swap2natleft a h)
		      	       	       (ucomp [ 3 1 2 ] (ucomp [ 1 0 3 ] x b)
				       	      	      	(ucomp [ 2 0 1 ] g t)))
           	      (ucomp [ 3 2 4 ] (swap2 f h) (swap3 (ucomp [ 1 0 3 ] x b)
		      	       	       	      	   	  (ucomp [ 3 0 1 ] a t)))

let syllepsis {C : Cat}
    {x :: C}
    (a :: id1(id x) => id1(id x))
    (b :: id1(id x) => id1(id x))
    : [ swap3inv a b => swap3 b a ]
  = sylcoh a b
